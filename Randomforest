import numpy as np  # Used for numerical operations
import pandas as pd  # Used for handling tabular data
from sklearn.model_selection import train_test_split  # To split data into training and testing sets
from sklearn.ensemble import RandomForestRegressor  # Random Forest Regressor model
from sklearn.metrics import mean_squared_error  # To evaluate prediction accuracy

# Load the data
data_path = "Advertising.csv"  # Path to the CSV file
data = pd.read_csv(data_path)  # Load the CSV into a DataFrame

# Extract input features and target variable
features = data[['TV', 'radio', 'newspaper']].values  # Feature columns
target = data['sales'].values  # Target column

# Divide data into training and test sets
f_train, f_test, t_train, t_test = tsplit(
    f, t, test_size=0.2, random_state=42
)

ensemble_size = 5  # Total number of Random Forest models to use
all_predictions = []  # To collect predictions from each individual model

# Train multiple Random Forest models
for i in range(ensemble_size):
    forest = RandomForestRegressor(n_estimators=10, random_state=i)  # Create model with 10 trees
    forest.fit(f_train, t_train)  # Fit the model on training data
    pred = forest.predict(f_test)  # Generate predictions
    all_predictions.append(pred)  # Store predictions

# Average predictions from all models
average_prediction = np.mean(all_predictions, axis=0)

# Calculate Mean Squared Error
error = mean_squared_error(t_test, average_prediction)
print(f"Mean Squared Error: {error}")
